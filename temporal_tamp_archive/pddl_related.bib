@inproceedings{Coles2008,
  author = {Andrew Coles and Maria Fox and Derek Long and Amanda Smith and and
            Department of ComputerInformation Sciences and University of
            Strathclyde and Glasgow and G1 1XH and UK},
  booktitle = {Proceedings of the Twenty-Third AAAI Conference on Artificial
               Intelligence (2008)},
  title = {Planning with Problems Requiring Temporal Coordination},
  year = {2008},
  pages = {137-144},
  abstract = {Fox 2004) and used in this work, refers to problems whose
              solutions can benefit from concurrent activity, subsuming re-},
  comment = {Introduced CRIKEY3, extended version of CRIKEY planner to handle
             timed initial literals and PDDL2.1 features},
  file = {:planning_problems_temporal_coordination.pdf:PDF},
  journal = {2008 15th International Symposium on Temporal Representation and
             Reasoning},
  keywords = {temporal, task, planning, pddl2.1},
}

@article{Fox2002,
  author = {M. Fox and D. Long},
  title = {PDDL2.1: An Extension to PDDL for Expressing Temporal Planning
           Domains},
  abstract = {In recent years research in the planning community has moved
              increasingly toward s application of planners to realistic problems
              involving both time and many typ es of resources. For example,
              interest in planning demonstrated by the space res earch community
              has inspired work in observation scheduling, planetary rover ex
              ploration and spacecraft control domains. Other temporal and
              resource-intensive domains including logistics planning, plant
              control and manufacturing have also helped to focus the community
              on the modelling and reasoning issues that must be confronted to
              make planning technology meet the challenges of application. The
              International Planning Competitions have acted as an important
              motivating fo rce behind the progress that has been made in
              planning since 1998. The third com petition (held in 2002) set the
              planning community the challenge of handling tim e and numeric
              resources. This necessitated the development of a modelling langua
              ge capable of expressing temporal and numeric properties of
              planning domains. In this paper we describe the language, PDDL2.1,
              that was used in the competition. We describe the syntax of the
              language, its formal semantics and the validation of concurrent
              plans. We observe that PDDL2.1 has considerable modelling power ---
              exceeding the capabilities of current planning technology --- and
              presents a number of important challenges to the research
              community.},
  date = {2002-12-03},
  doi = {10.1613/jair.1129},
  eprint = {1106.4561v1},
  eprintclass = {cs.AI},
  eprinttype = {arXiv},
  file = {:pddl2.1.pdf:PDF},
  groups = {therring:1},
  journaltitle = {Journal Of Artificial Intelligence Research, Volume 20, pages
                  61-124, 2003},
  keywords = {temporal, pddl2.1},
}

@inproceedings{Fox2002a,
  author = {Fox, Maria and Long, Derek},
  booktitle = {Proceedings of the 3rd International NASA Workshop on Planning
               and Scheduling for Space},
  title = {PDDL+: Modeling continuous time dependent effects},
  year = {2002},
  pages = {34},
  volume = {4},
  comment = {Expands PDDL2.1 to include processes and events to handle
             extrageneous effects and durative actions in planning. Events are
             actions that are applied by the "environment" that can start
             processes. Processes affect the state over time and continue to
             occur unless acted on by an effect or action.},
  file = {:pddl+.pdf:PDF},
  groups = {therring:1},
  keywords = {pddl+},
}

@inproceedings{Piotrowski2016,
  author = {Piotrowski, Wiktor and Fox, Maria and Long, Derek and Magazzeni,
            Daniele and Mercorio, Fabio},
  booktitle = {Proceedings of the Twenty-Fifth International Joint Conference on
               Artificial Intelligence},
  title = {Heuristic Planning for PDDL+ Domains},
  year = {2016},
  address = {New York, New York, USA},
  pages = {3213â€“3219},
  publisher = {AAAI Press},
  series = {IJCAI'16},
  abstract = {Planning with hybrid domains modelled in PDDL+ has been gaining
              research interest in the Automated Planning community in recent
              years. Hybrid domain models capture a more accurate representation
              of real world problems that involve continuous processes than is
              possible using discrete systems. However, solving problems
              represented as PDDL+ domains is very challenging due to the
              construction of complex system dynamics, including non-linear
              processes and events. In this paper we introduce DiNo, a new
              planner capable of tackling complex problems with non-linear system
              dynamics governing the continuous evolution of states. DiNo is
              based on the discretise-and-validate approach and uses the novel
              Staged Relaxed Planning Graph+ (SRPG+) heuristic, which is
              introduced in this paper. Although several planners have been
              developed to work with subsets of PDDL+ features, or restricted
              forms of processes, DiNo is currently the only heuristic planner
              capable of handling non-linear system dynamics combined with the
              full PDDL+ feature set.},
  file = {:heuristic_planning_pddl+.pdf:PDF},
  isbn = {9781577357704},
  keywords = {temporal, task, planning, pddl+},
  numpages = {7},
}

@inproceedings{Garrido2002,
  author = {Antonio Garrido and Maria Fox and  and Derek and Long},
  booktitle = {Proceedings of the 15th Eureopean Conference on Artificial
               Intelligence, ECAI'2002},
  title = {A Temporal Planning System for Durative Actions of PDDL2.1},
  year = {2002},
  month = {01},
  pages = {586-590},
  abstract = {Many planning domains have temporal features that can 2 MOTIVATION
              be expressed as durations associated with actions. Unfortunately,
              the conservative model of actions of most temporal planners is not
              ap- Unlike PDDL, PDDL2.1 allows the modelling of temporal planning},
  file = {:temporal_planning_durative_actions_pddl2.1.pdf:PDF},
  keywords = {temporal, task, planning, pddl2.1},
}

@inproceedings{Cashmore2016,
  author = {Michael Cashmore and Maria Fox and Derek Long and Daniele Magazzeni},
  booktitle = {Proceedings of the 26th International Conference on Automated
               Planning and Scheduling (ICAPS 2016)},
  title = {A Compilation of the Full PDDL+ Language into SMT},
  year = {2016},
  abstract = {Planning in hybrid systems is important for dealing with real
              world applications. PDDL+ supports this representation of domains
              with mixed discrete and continuous dynamics, and supports events
              and processes modeling exogenous change. Motivated by numerous
              SAT-based planning approaches, we propose an approach to PDDL+
              planning through SMT, describing an SMT encoding that captures all
              the features of the PDDL+ problem as published by Fox and Long (
              2006). The encoding can be applied on domains with nonlinear
              continuous change. We apply this encoding in a simple planning
              algorithm, demonstrating excellent results on a set of benchmark
              problems.},
  conference = {AAAI Workshops},
  file = {:compilation_pddl+_smt.pdf:PDF},
  groups = {therring:1},
  journal = {Proceedings of the 26th International Conference on Automated
             Planning and Scheduling (ICAPS 2016)},
  keywords = {planning, smt, pddl+},
  url = {https://www.aaai.org/ocs/index.php/WS/AAAIW16/paper/view/12589/12427},
}

@InProceedings{Ghallab1998,
  author               = {Ghallab, M. and Howe, A. and Knoblock, C. and Mcdermott, D. and Ram, A. and Veloso, M. and Weld, D. and Wilkins, D.},
  title                = {{PDDL---The Planning Domain Definition Language}},
  year                 = {1998},
  abstract             = {{This manual describes the syntax of PDDL, the Planning Domain
              Definition Language, the problem-specification language for the
              AIPS-98 planning competition. The language has roughly the the
              expressiveness of Pednault's ADL [10] for propositions, and roughly
              the expressiveness of UMCP [6] for actions. Our hope is to
              encourage empirical evaluation of planner performance, and
              development of standard sets of problems all in comparable
              notations. 1 Introduction This manual describes the syntax,...}},
  added-at             = {2011-05-04T16:04:17.000+0200},
  biburl               = {https://www.bibsonomy.org/bibtex/25c6a68d39689f821990388098e7deccc/baisemain},
  citeulike-article-id = {1297527},
  citeulike-linkout-0  = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi= 10.1.1.37.212},
  file                 = {:pddl.pdf:PDF},
  interhash            = {79d5e5bbc06e74f83bebdbb00b1b61e6},
  intrahash            = {5c6a68d39689f821990388098e7deccc},
  keywords             = {pddl, planning},
  posted-at            = {2007-05-15 18:01:28},
  priority             = {2},
  timestamp            = {2011-05-04T16:04:38.000+0200},
  url                  = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.37.212},
}

@Article{10.1093/logcom/4.5.467,
  author   = {Pednault, Edwin P. D.},
  journal  = {Journal of Logic and Computation},
  title    = {{ADL and the State-Transition Model of Action}},
  year     = {1994},
  issn     = {0955-792X},
  month    = {10},
  number   = {5},
  pages    = {467-512},
  volume   = {4},
  abstract = {{This paper provides a complete presentation of the syntax,
              semantics, and some of the properties of ADL, a formalism for
              representing and reasoning about the effects of actions. ADL is
              based on the state-transition model of action, combining much of
              the expressive power of the situation calculus with the notational
              and computational benefits of the STRIPS language. In combining
              these elements, ADL attempts to strike a better balance in the
              tradeoff between the expressiveness of a logical formalism and the
              computational complexity of reasoning with that formalism. ADL is
              defined from a semantic standpoint as a set of constraints on the
              general state-transition model of action. These constraints are
              general enough to enable situation-dependent effects to be
              described while being strong enough to provide a simple solution to
              the frame problem. The syntax of ADL can vary, allowing different
              syntactical variants to be developed without altering the
              underlying semantics. The syntax presented here resembles the
              STRIPS operator language augmented with conditional add and delete
              lists. Reasoning is accomplished by transforming ADL schemas into
              regression operators. It is shown that regression operators provide
              a sound and complete means for reasoning about the effects of
              actions represented in ADL. It is also shown that, in general,
              comparable progression operators cannot be constructed from ADL
              schemas. This result is surprising, since progression operators are
              conceptually the inverse of regression operators. Reasoning can
              also be accomplished by axiomatizing ADL schemas in the situation
              calculus. It is shown that a restricted form of the situation
              calculus can be defined that is effectively equivalent to ADL in
              that ADL schemas can be translated into equivalent sets of axioms
              in this restricted form, and vice versa. The restricted form is
              interesting in its own right, since it incorporates a solution to
              the frame problem that does not explicitly rely on circumscription.
              This solution is derived from the semantics of ADL.}},
  doi      = {10.1093/logcom/4.5.467},
  eprint   = {https://academic.oup.com/logcom/article-pdf/4/5/467/6322988/4-5-467.pdf},
  file     = {:adl_state_transition.pdf:PDF},
  keywords = {pddl-related, adl, transition model},
  url      = {https://doi.org/10.1093/logcom/4.5.467},
}

@article{FIKES1971189,
  author = {Richard E. Fikes and Nils J. Nilsson},
  journal = {Artificial Intelligence},
  title = {Strips: A new approach to the application of theorem proving to
           problem solving},
  year = {1971},
  issn = {0004-3702},
  number = {3},
  pages = {189-208},
  volume = {2},
  abstract = {We describe a new problem solver called STRIPS that attempts to
              find a sequence of operators in a space of world models to
              transform a given initial world model in which a given goal formula
              can be proven to be true. STRIPS represents a world model as an
              arbitrary collection in first-order predicate calculus formulas and
              is designed to work with models consisting of large numbers of
              formula. It employs a resolution theorem prover to answer questions
              of particular models and uses means-ends analysis to guide it to
              the desired goal-satisfying model.},
  doi = {https://doi.org/10.1016/0004-3702(71)90010-5},
  file = {:strips.pdf:PDF},
  keywords = {pddl, Problem solving, theorem proving, robot planning, heuristic
              search},
  url = {https://www.sciencedirect.com/science/article/pii/0004370271900105},
}
