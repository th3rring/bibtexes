@InProceedings{Chakraborty2010,
  author      = {Sourav Chakraborty, Eldar Fischer, Oded Lachish, Raphael Yuster},
  booktitle   = {Proceedings from the Symposium on Theeoretical Aspects of Computer Science},
  title       = {Two-phase algorithms for the parametric shortest path problem},
  year        = {2010},
  pages       = {167-178},
  abstract    = {A {\em parametric weighted graph} is a graph whose edges are labeled with continuous real functions of a single common variable. For any instantiation of the variable, one obtains a standard edge-weighted graph. Parametric weighted graph problems are generalizations of weighted graph problems, and arise in various natural scenarios. Parametric weighted graph algorithms consist of two phases. A {\em preprocessing phase} whose input is a parametric weighted graph, and whose output is a data structure, the advice, that is later used by the {\em instantiation phase}, where a specific value for the variable is given. The instantiation phase outputs the solution to the (standard) weighted graph problem that arises from the instantiation. The goal is to have the running time of the instantiation phase supersede the running time of any algorithm that solves the weighted graph problem from scratch, by taking advantage of the advice. In this paper we construct several parametric algorithms for the shortest path problem. For the case of linear function weights we present an algorithm for the single source shortest path problem.},
  date        = {2010-01-21},
  eprint      = {1001.3749v2},
  eprintclass = {cs.CC},
  eprinttype  = {arXiv},
  file        = {:paper_library/two_phase_parametric_shortest_path.pdf:PDF},
  keywords    = {graph, upgradable, shortest path},
}

@Article{DoowonPalk1995,
  author   = {Doowon Palk, Sartaj Sahni},
  journal  = {Networks},
  title    = {Network Upgrading Problems},
  year     = {1995},
  pages    = {45-48},
  volume   = {Vol. 26},
  file     = {:paper_library/network_upgrading_problems.pdf:PDF},
  keywords = {graph, upgradable},
}

@InProceedings{Dilkina2011,
  author    = {Bistra N. Dilkina and Katherine J. Lai and Carla P. Gomes},
  booktitle = {CPAIOR},
  title     = {Upgrading Shortest Paths in Networks},
  year      = {2011},
  file      = {:paper_library/upgrading_shortest_paths_networks.pdf:PDF},
  keywords  = {graph, upgradable},
}

@Article{Frieze2021,
  author   = {Alan Frieze and Tomasz Tkocz},
  journal  = {Discrete Applied Mathematics},
  title    = {Shortest paths with a cost constraint: A probabilistic analysis},
  year     = {2021},
  issn     = {0166-218X},
  pages    = {46-53},
  volume   = {302},
  abstract = {We consider a constrained version of the shortest path problem on the complete graphs whose edges have independent random lengths and costs. We establish the asymptotic value of the minimum length as a function of the cost-budget within a wide range.},
  doi      = {https://doi.org/10.1016/j.dam.2021.06.001},
  file     = {:paper_library/shortest_path_cost_constraint_probabilistic_analysis.pdf:PDF},
  keywords = {graph, upgradable},
  url      = {https://www.sciencedirect.com/science/article/pii/S0166218X21002390},
}

@InBook{Strasser2015,
  pages     = {69--82},
  title     = {Graph Fill-In, Elimination Ordering, Nested Dissection and Contraction Hierarchies},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Strasser, Ben and Wagner, Dorothea},
  editor    = {Schulz, Andreas S. and Skutella, Martin and Stiller, Sebastian and Wagner, Dorothea},
  address   = {Cham},
  isbn      = {978-3-319-24971-1},
  abstract  = {Graph fill-in, elimination ordering, separators, nested dissection orders and tree-width are only some examples of classical graph concepts that are related in manifold ways. This essay shows how contraction hierarchies, a successful approach to speed up Dijkstra's algorithm for shortest paths, fits into this series of graph concepts. A theoretical consequence of this insight is a guarantee for the size of the search space required by Dijkstra's algorithm combined with contraction hierarchies. On the other hand, the use of nested dissection leads to a very practicable variant of contraction hierarchies that can be applied in scenarios where edge lengths often change.},
  booktitle = {Gems of Combinatorial Optimization and Graph Algorithms},
  doi       = {10.1007/978-3-319-24971-1_7},
  file      = {:paper_library/graph_fill_in_contraction_hierarchies.pdf:PDF},
  keywords  = {graph, upgradable},
  url       = {https://doi.org/10.1007/978-3-319-24971-1_7},
}

@InProceedings{Schaefer2008,
  author    = {Schaefer, Guido},
  title     = {Budgeted Matching via the Gasoline Puzzle},
  booktitle = {Proceeeings of the 13th Conference on Integer Progreamming and Combinatorical Optimization},
  year      = {2008},
  volume    = {5035},
  pages     = {273-287},
  month     = {05},
  doi       = {10.1007/978-3-540-68891-4_19},
  file      = {:paper_library/budget_matching_gasoline.pdf:PDF},
  isbn      = {978-3-540-68886-0},
  keywords  = {graph, upgradable},
}

@Article{Muller2015,
  author    = {Rudolf Muller and Marc Uetz},
  journal   = {Gems of Combinatorial Optimization and Graph Algorithms},
  title     = {Shortest Path to Mechanical Design},
  year      = {2015},
  pages     = {83-94},
  doi       = {10.1017/S0890060415000311},
  file      = {:paper_library/shortest_path_mechanism_design.pdf:PDF},
  keywords  = {graph, upgradable},
  publisher = {Cambridge University Press},
}

@Article{Baxter2014,
  author   = {Matthew Baxter and Tarek Elgindy and Andreas T. Ernst and Thomas Kalinowski and Martin W.P. Savelsbergh},
  journal  = {European Journal of Operational Research},
  title    = {Incremental network design with shortest paths},
  year     = {2014},
  issn     = {0377-2217},
  number   = {3},
  pages    = {675-684},
  volume   = {238},
  abstract = {We introduce a class of incremental network design problems focused on investigating the optimal choice and timing of network expansions. We concentrate on an incremental network design problem with shortest paths. We investigate structural properties of optimal solutions, show that the simplest variant is NP-hard, analyze the worst-case performance of natural greedy heuristics, derive a 4-approximation algorithm, and conduct a small computational study.},
  doi      = {https://doi.org/10.1016/j.ejor.2014.04.018},
  file     = {:paper_library/incremental_network_design_shortest_paths.pdf:PDF},
  keywords = {graph, upgradable, shortest path},
  url      = {https://www.sciencedirect.com/science/article/pii/S0377221714003440},
}

@Article{Bouras2019,
  author   = {Ikram Bouras and Rosa Figueiredo and Michael Poss and Fen Zhou},
  journal  = {Computers \& Operations Research},
  title    = {On two new formulations for the fixed charge network design problem with shortest path constraints},
  year     = {2019},
  issn     = {0305-0548},
  pages    = {226-237},
  volume   = {108},
  abstract = {We study the fixed charge network design problem with shortest path constraints which is modeled as a bi-level program. We first review three one-level formulations obtained by applying the complementarity slackness theorem, Bellmanâ€™s optimality conditions and cycle elimination constraints. We propose two new binary integer programming (BILP) formulations inspired by path and cycle inequalities. The two formulations have exponential numbers of constraints. We incorporate the path and the cycle based formulations in a branch-and-cut algorithm and in another cutting-plane based method. Numerical experiments are performed on real instances, and random data sets generated with different criteria to examine the difficulty of the instances. The results show that the proposed cutting plane algorithms can solve up to 19% more instances than the classic branch-and-bound algorithms.},
  doi      = {https://doi.org/10.1016/j.cor.2019.04.007},
  file     = {:paper_library/fixed_charge_network_design_shortest_path.pdf:PDF},
  keywords = {graph, upgradable, Bi-level programming, Cutting plane, Branch-and-cut},
  url      = {https://www.sciencedirect.com/science/article/pii/S0305054819300905},
}

@Article{Couprie2011,
  author   = {Couprie, Camille and Grady, Leo and Najman, Laurent and Talbot, Hugues},
  journal  = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
  title    = {Power Watershed: A Unifying Graph-Based Optimization Framework},
  year     = {2011},
  number   = {7},
  pages    = {1384-1399},
  volume   = {33},
  doi      = {10.1109/TPAMI.2010.200},
  file     = {:paper_library/power_watershed.pdf:PDF},
  keywords = {graph, upgradable},
}
